// Sync-generator
pub module syncgen (
    DCLK : input clock           ,
    DRST : input reset           ,
    RESOL: input Resolution::Mode,

    DSP_HSYNC_X: output logic, /// horizontal sync (active-low)
    DSP_VSYNC_X: output logic, /// vertical sync (active-low)
    DSP_preDE  : output logic, /// two clock cycle before DE
    VRSTART    : output logic,
) {
    var hsc: logic<11>;
    var hfp: logic<6> ;
    var hpw: logic<8> ;
    var hbp: logic<8> ;
    var hdo: logic<11>;
    var vsc: logic<11>;
    var vfp: logic<4> ;
    var vpw: logic<3> ;
    var vbp: logic<6> ;
    var vdo: logic<11>;

    inst i_tming: SyncgenTimingSel (
        mode: RESOL,
        hsc        ,
        hfp        ,
        hpw        ,
        hbp        ,
        hdo        ,
        vsc        ,
        vfp        ,
        vpw        ,
        vbp        ,
        vdo        ,
    );

    var hcnt: logic<11>; // horizontal counter
    var vcnt: logic<11>; // vertical counter

    // horizontal counter
    always_ff {
        if_reset {
            hcnt = 0;
        } else {
            hcnt = if hcnt == hsc - 1 ? 0 : hcnt + 1;
        }
    }

    // vertical counter
    always_ff {
        if_reset {
            vcnt = 0;
        } else if hcnt == hsc - 1 {
            vcnt = if vcnt == vsc - 1 ? 0 : vcnt + 1;
        }
    }

    // DSP_preDE
    var h2: logic<11>;
    var v2: logic<11>;
    always_comb {
        if hcnt == hsc - 1 {
            // +1 -> 0 (vcnt + 1), +2 -> 1
            h2 = 1;
            v2 = if vcnt == vsc - 1 ? 0 : vcnt + 1;
        } else if hcnt == hsc - 2 {
            // +1 -> hsc - 1, +2 -> 0 (vcnt + 1)
            h2 = 0;
            v2 = if (vcnt == vsc - 1) ? 0 : vcnt + 1;
        } else {
            h2 = hcnt + 2;
            v2 = vcnt;
        }
    }
    assign DSP_preDE = (h2 <: hdo) & (v2 <: vdo);

    assign DSP_HSYNC_X = ~((hcnt >= hdo + hfp) && (hcnt <: hdo + hfp + hpw));
    assign DSP_VSYNC_X = ~((vcnt >= vdo + vfp) && (vcnt <: vdo + vfp + vpw));
    assign VRSTART     = (hcnt == 0) & (vcnt == vsc - 1);
}
