// Register Controller
pub module disp_regctrl (
    // System Signals
    ACLK: input clock, /// system clock
    ARST: input reset, /// system reset

    DSP_VSYNC_X: input logic,

    // Register bus
    WRADDR: input  logic<16>,
    BYTEEN: input  logic<4> ,
    WREN  : input  logic    ,
    WDATA : input  logic<32>,
    RDADDR: input  logic<16>,
    RDEN  : input  logic    ,
    RDATA : output logic<32>,

    // Register output
    DISPON  : output logic    ,
    DISPADDR: output logic<32>,

    // Interrupt, FIFO flag
    DSP_IRQ  : output logic,
    BUF_UNDER: input  logic,
    BUF_OVER : input  logic,
) {
    assign DSP_IRQ = 1'b0;

    always_ff {
        if_reset {
            DISPADDR = 32'h0;
        }
    }

    always_ff {
        if_reset {
            DISPON = 1'b0;
        }
        // else if (ctrlreg_wr) {
        //     DISPON = WDATA[0];
        // }
    }

    always_ff {}
}
