// Sync-generator
pub module syncgen (
    DCLK : input clock           ,
    DRST : input reset           ,
    RESOL: input Resolution::Mode,

    DSP_HSYNC_X: output logic, /// horizontal sync (active-low)
    DSP_VSYNC_X: output logic, /// vertical sync (active-low)
    DSP_preDE  : output logic, /// two clock cycle before DE
    VRSTART    : output logic,
) {
    var hsc: logic<11>;
    var hfp: logic<6> ;
    var hpw: logic<8> ;
    var hbp: logic<8> ;
    var hdo: logic<11>;
    var vsc: logic<11>;
    var vfp: logic<4> ;
    var vpw: logic<3> ;
    var vbp: logic<6> ;
    var vdo: logic<11>;

    inst i_tming: SyncgenTimingSel (
        mode: RESOL,
        hsc        ,
        hfp        ,
        hpw        ,
        hbp        ,
        hdo        ,
        vsc        ,
        vfp        ,
        vpw        ,
        vbp        ,
        vdo        ,
    );

    var hcnt: logic<11>; // horizontal counter
    var vcnt: logic<11>; // vertical counter

    // VRSTART
    always_ff {
        if_reset {
            VRSTART = 0;
        } else if vcnt == vfp + vpw + vbp - 1 && hcnt == 0 {
            VRSTART = 1;
        } else if vcnt == vfp + vpw + vbp - 0 && hcnt == 0 {
            VRSTART = 0;
        }
    }

    // horizontal counter
    always_ff {
        if_reset {
            hcnt = 0;
        } else {
            hcnt = if hcnt + 1 == hsc ? 0 : hcnt + 1;
        }
    }

    // vertical counter
    always_ff {
        if_reset {
            vcnt = 0;
        } else if hcnt + 1 == hsc {
            vcnt = if vcnt + 1 == vsc ? 0 : vcnt + 1;
        }
    }

    // DSP_preDE
    always_ff {
        if_reset {
            DSP_preDE = 0;
        } else if vfp + vpw + vbp >: vcnt {
            DSP_preDE = 0;
        } else if hfp + hpw + hbp - 1 == hcnt + 2 {
            DSP_preDE = 1;
        } else if hsc - 1 == hcnt + 2 {
            DSP_preDE = 0;
        }
    }

    // DSP_HSYNC_X
    always_ff {
        if_reset {
            DSP_HSYNC_X = 1;
        } else if hfp == hcnt + 1 {
            DSP_HSYNC_X = 0;
        } else if hfp + hpw == hcnt + 1 {
            DSP_HSYNC_X = 1;
        }
    }

    // DSP_VSYNC_X
    always_ff {
        if_reset {
            DSP_VSYNC_X = 1;
        } else if hfp == hcnt + 1 {
            if vfp == vcnt {
                DSP_VSYNC_X = 0;
            } else if vfp + vpw == vcnt {
                DSP_VSYNC_X = 1;
            }
        }
    }
}
