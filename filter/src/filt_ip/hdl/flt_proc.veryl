/// Filtering
///
/// - Apply filtering to input from the source FIFO.
/// - Store the output data into the write FIFO.
pub module flt_proc (
    // System Signals
    CLK : input clock,
    ARST: input reset, // Reset by system
    RSTS: input reset, // Reset by commands

    // inputs
    FLTRG_COLOR   : input logic<3> ,
    FLTVC_SDATAVLD: input logic    ,
    FLTVC_SDATA   : input logic<32>,

    // outputs
    FLTPC_WDATAVLD: output logic    ,
    FLTPC_WDATA   : output logic<32>,
) {
    let rst: '_ default reset = ARST | RSTS;

    always_ff {
        if_reset {
            FLTPC_WDATAVLD = 1'b0;
            FLTPC_WDATA    = 32'h0;
        } else {
            if FLTVC_SDATAVLD {
                FLTPC_WDATAVLD = 1'b1;

                FLTPC_WDATA = {
                    8'h00,
                    if FLTRG_COLOR[2] ? FLTVC_SDATA[23:16] : 8'h00,
                    if FLTRG_COLOR[1] ? FLTVC_SDATA[15:8] : 8'h00,
                    if FLTRG_COLOR[0] ? FLTVC_SDATA[7:0] : 8'h00,
                };
            } else {
                FLTPC_WDATAVLD = 1'b0;
            }
        }
    }
}
